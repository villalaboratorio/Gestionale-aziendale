import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, Row, Col, Button } from 'react-bootstrap';
import { FaPlus, FaFilter } from 'react-icons/fa';
import axios from 'axios';
import styled from 'styled-components';

import StatsCard from '../components/DashboardLavorazioni/components/StatsCard';
import LavorazioniTable from '../components/DashboardLavorazioni/components/LavorazioniTable';
import QuickFilters from '../components/DashboardLavorazioni/components/QuickFilters';
import useDashboardLavorazioni from '../components/DettagliScheda/hooks/useDashboardLavorazioni';

const DashboardContainer = styled.div`
    padding: ${({ theme }) => theme.spacing.lg};
`;

const ErrorAlert = styled.div`
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 4px;
    background-color: #fee2e2;
    color: #dc2626;
    border: 1px solid #f87171;
`;

const LoadingContainer = styled.div`
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 200px;
`;

const HeaderContainer = styled.div`
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
`;

const LavorazioniDashboard = () => {
    const navigate = useNavigate();
    const [localError, setLocalError] = useState(null);
    
    const { 
        lavorazioni, 
        loading, 
        error: apiError, 
        filters, 
        stats, 
        pagination,
        updateFilters,
        updatePagination,
        refreshData
    } = useDashboardLavorazioni();

    useEffect(() => {
        if (localError) {
            const timer = setTimeout(() => setLocalError(null), 5000);
            return () => clearTimeout(timer);
        }
    }, [localError]);

    const handleNewLavorazione = useCallback(() => {
        navigate('/dettaglio-lavorazioni/nuovo');
    }, [navigate]);

    const handleEdit = useCallback((id) => {
        navigate(`/dettaglio-lavorazioni/${id}`);
    }, [navigate]);

    const handleDelete = useCallback(async (id) => {
        if (!window.confirm('Sei sicuro di voler eliminare questa lavorazione?')) return;
        
        try {
            await axios.delete(`/api/dettaglio-lavorazioni/${id}`);
            refreshData();
        } catch (err) {
            setLocalError('Errore durante l\'eliminazione della lavorazione');
            console.error('Errore eliminazione:', err);
        }
    }, [refreshData]);

    const handleFilterChange = useCallback((newFilters) => {
        updateFilters(newFilters);
    }, [updateFilters]);

    const handlePageChange = useCallback((newPage) => {
        updatePagination(newPage);
    }, [updatePagination]);

    if (loading) {
        return (
            <DashboardContainer>
                <LoadingContainer>
                    <div className="spinner-border text-primary" role="status">
                        <span className="visually-hidden">Caricamento...</span>
                    </div>
                </LoadingContainer>
            </DashboardContainer>
        );
    }

    return (
        <DashboardContainer>
            {(apiError || localError) && (
                <ErrorAlert>
                    {apiError || localError}
                </ErrorAlert>
            )}

            <HeaderContainer>
                <h2>Dashboard Lavorazioni</h2>
                <Button variant="primary" onClick={handleNewLavorazione}>
                    <FaPlus className="me-2" />
                    Nuova Lavorazione
                </Button>
            </HeaderContainer>

            <Row className="mb-4">
                <Col md={3}>
                    <StatsCard 
                        title="Totali"
                        value={stats.totali}
                        icon="ðŸ“Š"
                    />
                </Col>
                <Col md={3}>
                    <StatsCard 
                        title="In Lavorazione"
                        value={stats.inLavorazione}
                        icon="ðŸ”„"
                    />
                </Col>
                <Col md={3}>
                    <StatsCard 
                        title="Urgenti"
                        value={stats.urgenti}
                        icon="âš¡"
                    />
                </Col>
                <Col md={3}>
                    <StatsCard 
                        title="Completate"
                        value={stats.completate}
                        icon="âœ…"
                    />
                </Col>
            </Row>

            <Card className="mb-4">
                <Card.Header>
                    <div className="d-flex justify-content-between align-items-center">
                        <h5 className="mb-0">
                            <FaFilter className="me-2" />
                            Filtri
                        </h5>
                    </div>
                </Card.Header>
                <Card.Body>
                    <QuickFilters 
                        filters={filters}
                        onChange={handleFilterChange}
                    />
                </Card.Body>
            </Card>

            <LavorazioniTable 
                lavorazioni={lavorazioni}
                onEdit={handleEdit}
                onDelete={handleDelete}
                pagination={pagination}
                onPageChange={handlePageChange}
            />
        </DashboardContainer>
    );
};

export default LavorazioniDashboard;
